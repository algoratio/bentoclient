{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "enter program name, for example ${workspaceFolder}/a.out",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },

        {
            "name": "(gdb) bentohistorical",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/apps/bentohistorical",
            "args": ["${workspaceFolder}/scripts/getkey.sh"],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) bentohistchains",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/apps/bentohistchains",
            /*
            "args": [
                "-s", "aapl,amd,amzn,bno,dia,gld,googl,iwm,meta,msft,nflx,nvda,qqq,spy,tsla,uso,xlk,xlv",
                "-k", "${workspaceFolder}/scripts/getkey.sh",
                "-n", "3",
                "-d", "2025-04-28",
                "-l", "info"
            ],
            */
            "args": [
                "-s", "bno",
                "-k", "${workspaceFolder}/scripts/getkey.sh",
                "-n", "3",
                "-d", "2025-04-28",
                "-l", "trace",
                "--yieldcurve", "${workspaceFolder}/data/TSY.2025-06-06.csv"
            ],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [
                {
                    "name": "DB_KEYFILE",
                    "value": "/home/username/txt/databento/key.txt"
                }
            ],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Debug testlib",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/tests/testlib", // Path to the testlib executable
            "args": ["[yieldcurve]"], // Add any command-line arguments if needed
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}", // Set the working directory
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb", // Use gdb for debugging
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "build testlib", // Optional: Add a pre-launch build task
            "miDebuggerPath": "/usr/bin/gdb" // Path to gdb (adjust if needed)
        }


    ]
}
